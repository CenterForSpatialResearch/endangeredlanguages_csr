cameras:
    camera1:
        type: perspective

lights:
    light1:
        type: directional
        direction: [0, 1, -.5]
        diffuse: .3
        ambient: 1

sources:
    mapzen:
        type: TopoJSON
        url: https://tile.mapzen.com/mapzen/vector/v1/all/{z}/{x}/{y}.topojson?api_key=mapzen-LJDo7JL
        min_zoom: 6
        max_zoom: 16
    scene:
        background:
            color: black


layers:
    
    boundaries:
        data: { source: mapzen }
        boroughBoundaries:
            filter:
                kind: [borough]
                not: {kind: [neighborhood, country, state,locality, county, region]}
                $zoom: {min:2, max 10;}
        draw:
            lines:
                order: 490
                color: black 
                width: 100
    boundaries2:            
        data: { source: mapzen }
        neighborhoodBoundaries:
            filter:
                not: {kind: [borough, country, state,locality, county, region]}
                kind: [borough]
                $zoom: {min:10, max 15;}
        draw:
            lines:
                order: 490
                color: red 
                width: 100
    # places:
    #     data: { source: mapzen }
    #     naighborhoodNames:
    #         filter:
    #             all:
    #                 not: {kind: [borough, country, state, neighborhood], locality, county, region}
    #                 # locality: New York
    #                 # $zoom: {min:2, max 10;}
    #     draw:
    #         text:
    #             font:
    #                 order: 490
    #                 transform: uppercase
    #                 size: function() {return 35 - feature.scalerank * 2 - (20 - $zoom) }
    #                 family: Roboto, helvetica, sans-serif
    #                 weight: 600
    #                 fill: red
    #                 stroke:
    #                     color: '#E5E5E5'
    #                     width: 0

                
    
    # default 
    earth: #for most of the land stuff
        data: { source: mapzen }
        draw:
            polygons:
                order: function() { return feature.sort_rank; }
                color: '#e6e6e6'

    landuse: #also land
        data: { source: mapzen }
        draw:
            polygons:
                order: function() { return feature.sort_rank; }
                color: '#e6e6e6'

    water:
        data: { source: mapzen }
        draw:
            polygons:
                order: function() { return feature.sort_rank; }
                color: '#D8EEFF'

    roads:
        data: { source: mapzen }
        filter:
            not: { kind: [path, rail, ferry] }
        draw:
            lines:
                order: function() { return feature.sort_rank; }
                color: gray
                width: 8
                cap: round
        highway:
            filter:
                kind: highway
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: '#CCCCCC'
                    width: 12
                    outline:
                        color: grey
                        width: 1.5
        minor_road:
            filter:
                kind: minor_road
            draw:
                lines:
                    order: function() { return feature.sort_rank; }
                    color: lightgrey
                    width: 5

    buildings:
        data: { source: mapzen }
        draw:
            polygons:
                order: function() { return feature.sort_rank; }
                color: |
                    function () {
                        var h = feature.height || 20;
                        h = Math.min((h + 50)/ 255, .8); // max brightness: .8
                        h = Math.max(h, .4); // min brightness: .4
                        return [h, h, h];
                    }
        3d-buildings:
            filter: { $zoom: { min: 15 } }
            draw:
                polygons:
                    extrude: function () { return feature.height > 20 || $zoom >= 16; }
